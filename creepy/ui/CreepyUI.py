# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'creepy.ui'
#
# Created by: PyQt5 UI code generator 5.5.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_CreepyMainWindow(object):
    def setupUi(self, CreepyMainWindow):
        CreepyMainWindow.setObjectName("CreepyMainWindow")
        CreepyMainWindow.resize(1463, 864)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(CreepyMainWindow.sizePolicy().hasHeightForWidth())
        CreepyMainWindow.setSizePolicy(sizePolicy)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../creepy/include/Eye_of_Sauron_by_Blood_Solice.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        CreepyMainWindow.setWindowIcon(icon)
        CreepyMainWindow.setAutoFillBackground(True)
        self.centralwidget = QtWidgets.QWidget(CreepyMainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.centralStackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralStackedWidget.sizePolicy().hasHeightForWidth())
        self.centralStackedWidget.setSizePolicy(sizePolicy)
        self.centralStackedWidget.setAutoFillBackground(True)
        self.centralStackedWidget.setObjectName("centralStackedWidget")
        self.mapPage = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mapPage.sizePolicy().hasHeightForWidth())
        self.mapPage.setSizePolicy(sizePolicy)
        self.mapPage.setObjectName("mapPage")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.mapPage)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.mapWebView = QtWebKitWidgets.QWebView(self.mapPage)
        self.mapWebView.setAutoFillBackground(True)
        self.mapWebView.setProperty("url", QtCore.QUrl("about:blank"))
        self.mapWebView.setObjectName("mapWebView")
        self.verticalLayout_4.addWidget(self.mapWebView)
        self.centralStackedWidget.addWidget(self.mapPage)
        self.analysisPage = QtWidgets.QWidget()
        self.analysisPage.setObjectName("analysisPage")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.analysisPage)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.analysisWebView = QtWebKitWidgets.QWebView(self.analysisPage)
        self.analysisWebView.setObjectName("analysisWebView")
        self.verticalLayout_6.addWidget(self.analysisWebView)
        self.centralStackedWidget.addWidget(self.analysisPage)
        self.verticalLayout_2.addWidget(self.centralStackedWidget)
        CreepyMainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(CreepyMainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1463, 23))
        self.menubar.setObjectName("menubar")
        self.menuCreepy = QtWidgets.QMenu(self.menubar)
        self.menuCreepy.setObjectName("menuCreepy")
        self.menuNewProject = QtWidgets.QMenu(self.menuCreepy)
        self.menuNewProject.setObjectName("menuNewProject")
        self.menuExport = QtWidgets.QMenu(self.menuCreepy)
        self.menuExport.setObjectName("menuExport")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setObjectName("menuAbout")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuFilters = QtWidgets.QMenu(self.menubar)
        self.menuFilters.setObjectName("menuFilters")
        CreepyMainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(CreepyMainWindow)
        self.statusbar.setObjectName("statusbar")
        CreepyMainWindow.setStatusBar(self.statusbar)
        self.dockWLocationsList = QtWidgets.QDockWidget(CreepyMainWindow)
        self.dockWLocationsList.setMinimumSize(QtCore.QSize(250, 127))
        self.dockWLocationsList.setObjectName("dockWLocationsList")
        self.dockWLocationsListContents = QtWidgets.QWidget()
        self.dockWLocationsListContents.setObjectName("dockWLocationsListContents")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.dockWLocationsListContents)
        self.verticalLayout.setObjectName("verticalLayout")
        self.locationsTableView = QtWidgets.QTableView(self.dockWLocationsListContents)
        self.locationsTableView.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.locationsTableView.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.locationsTableView.setObjectName("locationsTableView")
        self.locationsTableView.verticalHeader().setStretchLastSection(False)
        self.verticalLayout.addWidget(self.locationsTableView)
        self.dockWLocationsList.setWidget(self.dockWLocationsListContents)
        CreepyMainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.dockWLocationsList)
        self.dockWProjects = QtWidgets.QDockWidget(CreepyMainWindow)
        self.dockWProjects.setMinimumSize(QtCore.QSize(200, 300))
        self.dockWProjects.setStyleSheet("")
        self.dockWProjects.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.dockWProjects.setObjectName("dockWProjects")
        self.dockWProjectsContents = QtWidgets.QWidget()
        self.dockWProjectsContents.setObjectName("dockWProjectsContents")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.dockWProjectsContents)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.treeViewProjects = QtWidgets.QTreeView(self.dockWProjectsContents)
        self.treeViewProjects.setObjectName("treeViewProjects")
        self.verticalLayout_3.addWidget(self.treeViewProjects)
        self.dockWProjects.setWidget(self.dockWProjectsContents)
        CreepyMainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockWProjects)
        self.dockWCurrentLocationDetails = QtWidgets.QDockWidget(CreepyMainWindow)
        self.dockWCurrentLocationDetails.setObjectName("dockWCurrentLocationDetails")
        self.dockWCurrentTargetDetailsContents = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dockWCurrentTargetDetailsContents.sizePolicy().hasHeightForWidth())
        self.dockWCurrentTargetDetailsContents.setSizePolicy(sizePolicy)
        self.dockWCurrentTargetDetailsContents.setObjectName("dockWCurrentTargetDetailsContents")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.dockWCurrentTargetDetailsContents)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.currentTargetDetailsDetailsDateLabel = QtWidgets.QLabel(self.dockWCurrentTargetDetailsContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.currentTargetDetailsDetailsDateLabel.sizePolicy().hasHeightForWidth())
        self.currentTargetDetailsDetailsDateLabel.setSizePolicy(sizePolicy)
        self.currentTargetDetailsDetailsDateLabel.setTextFormat(QtCore.Qt.RichText)
        self.currentTargetDetailsDetailsDateLabel.setObjectName("currentTargetDetailsDetailsDateLabel")
        self.horizontalLayout_2.addWidget(self.currentTargetDetailsDetailsDateLabel)
        self.currentTargetDetailsDateValue = QtWidgets.QLabel(self.dockWCurrentTargetDetailsContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.currentTargetDetailsDateValue.sizePolicy().hasHeightForWidth())
        self.currentTargetDetailsDateValue.setSizePolicy(sizePolicy)
        self.currentTargetDetailsDateValue.setText("")
        self.currentTargetDetailsDateValue.setObjectName("currentTargetDetailsDateValue")
        self.horizontalLayout_2.addWidget(self.currentTargetDetailsDateValue)
        self.verticalLayout_5.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.currentTargetDetailsLocationLabel = QtWidgets.QLabel(self.dockWCurrentTargetDetailsContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.currentTargetDetailsLocationLabel.sizePolicy().hasHeightForWidth())
        self.currentTargetDetailsLocationLabel.setSizePolicy(sizePolicy)
        self.currentTargetDetailsLocationLabel.setObjectName("currentTargetDetailsLocationLabel")
        self.horizontalLayout_3.addWidget(self.currentTargetDetailsLocationLabel)
        self.currentTargetDetailsLocationValue = QtWidgets.QLabel(self.dockWCurrentTargetDetailsContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.currentTargetDetailsLocationValue.sizePolicy().hasHeightForWidth())
        self.currentTargetDetailsLocationValue.setSizePolicy(sizePolicy)
        self.currentTargetDetailsLocationValue.setText("")
        self.currentTargetDetailsLocationValue.setObjectName("currentTargetDetailsLocationValue")
        self.horizontalLayout_3.addWidget(self.currentTargetDetailsLocationValue)
        self.verticalLayout_5.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.currentTargetDetailsSourceLabel = QtWidgets.QLabel(self.dockWCurrentTargetDetailsContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.currentTargetDetailsSourceLabel.sizePolicy().hasHeightForWidth())
        self.currentTargetDetailsSourceLabel.setSizePolicy(sizePolicy)
        self.currentTargetDetailsSourceLabel.setObjectName("currentTargetDetailsSourceLabel")
        self.horizontalLayout_4.addWidget(self.currentTargetDetailsSourceLabel)
        self.currentTargetDetailsSourceValue = QtWidgets.QLabel(self.dockWCurrentTargetDetailsContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.currentTargetDetailsSourceValue.sizePolicy().hasHeightForWidth())
        self.currentTargetDetailsSourceValue.setSizePolicy(sizePolicy)
        self.currentTargetDetailsSourceValue.setText("")
        self.currentTargetDetailsSourceValue.setObjectName("currentTargetDetailsSourceValue")
        self.horizontalLayout_4.addWidget(self.currentTargetDetailsSourceValue)
        self.verticalLayout_5.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.currentTargetDetailsContextLabel = QtWidgets.QLabel(self.dockWCurrentTargetDetailsContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.currentTargetDetailsContextLabel.sizePolicy().hasHeightForWidth())
        self.currentTargetDetailsContextLabel.setSizePolicy(sizePolicy)
        self.currentTargetDetailsContextLabel.setObjectName("currentTargetDetailsContextLabel")
        self.horizontalLayout_5.addWidget(self.currentTargetDetailsContextLabel)
        self.currentTargetDetailsContextValue = QtWidgets.QLabel(self.dockWCurrentTargetDetailsContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.currentTargetDetailsContextValue.sizePolicy().hasHeightForWidth())
        self.currentTargetDetailsContextValue.setSizePolicy(sizePolicy)
        self.currentTargetDetailsContextValue.setText("")
        self.currentTargetDetailsContextValue.setTextFormat(QtCore.Qt.RichText)
        self.currentTargetDetailsContextValue.setWordWrap(True)
        self.currentTargetDetailsContextValue.setOpenExternalLinks(True)
        self.currentTargetDetailsContextValue.setObjectName("currentTargetDetailsContextValue")
        self.horizontalLayout_5.addWidget(self.currentTargetDetailsContextValue)
        self.verticalLayout_5.addLayout(self.horizontalLayout_5)
        self.dockWCurrentLocationDetails.setWidget(self.dockWCurrentTargetDetailsContents)
        CreepyMainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.dockWCurrentLocationDetails)
        self.mainToolbar = QtWidgets.QToolBar(CreepyMainWindow)
        self.mainToolbar.setObjectName("mainToolbar")
        CreepyMainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.mainToolbar)
        self.locationsActionsToolbar = QtWidgets.QToolBar(CreepyMainWindow)
        self.locationsActionsToolbar.setObjectName("locationsActionsToolbar")
        CreepyMainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.locationsActionsToolbar)
        self.dockWLogging = QtWidgets.QDockWidget(CreepyMainWindow)
        self.dockWLogging.setObjectName("dockWLogging")
        self.dockWLoggingContents = QtWidgets.QWidget()
        self.dockWLoggingContents.setObjectName("dockWLoggingContents")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.dockWLoggingContents)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.loggingContents = QtWidgets.QTextEdit(self.dockWLoggingContents)
        self.loggingContents.setObjectName("loggingContents")
        self.verticalLayout_9.addWidget(self.loggingContents)
        self.dockWLogging.setWidget(self.dockWLoggingContents)
        CreepyMainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.dockWLogging)
        self.actionExportKML = QtWidgets.QAction(CreepyMainWindow)
        self.actionExportKML.setCheckable(False)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/creepy/blue-document-export.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExportKML.setIcon(icon1)
        self.actionExportKML.setObjectName("actionExportKML")
        self.actionExportCSV = QtWidgets.QAction(CreepyMainWindow)
        self.actionExportCSV.setIcon(icon1)
        self.actionExportCSV.setObjectName("actionExportCSV")
        self.actionExit = QtWidgets.QAction(CreepyMainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/creepy/cross.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExit.setIcon(icon2)
        self.actionExit.setObjectName("actionExit")
        self.actionReportProblem = QtWidgets.QAction(CreepyMainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/creepy/exclamation.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionReportProblem.setIcon(icon3)
        self.actionReportProblem.setObjectName("actionReportProblem")
        self.actionAbout = QtWidgets.QAction(CreepyMainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/creepy/creepy"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAbout.setIcon(icon4)
        self.actionAbout.setObjectName("actionAbout")
        self.actionPluginsConfiguration = QtWidgets.QAction(CreepyMainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/creepy/application-sidebar-list.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPluginsConfiguration.setIcon(icon5)
        self.actionPluginsConfiguration.setObjectName("actionPluginsConfiguration")
        self.actionLocations_List = QtWidgets.QAction(CreepyMainWindow)
        self.actionLocations_List.setCheckable(True)
        self.actionLocations_List.setChecked(True)
        self.actionLocations_List.setSoftKeyRole(QtWidgets.QAction.NoSoftKey)
        self.actionLocations_List.setObjectName("actionLocations_List")
        self.actionResult_Details = QtWidgets.QAction(CreepyMainWindow)
        self.actionResult_Details.setCheckable(True)
        self.actionResult_Details.setChecked(True)
        self.actionResult_Details.setObjectName("actionResult_Details")
        self.actionAvailable_Plugins = QtWidgets.QAction(CreepyMainWindow)
        self.actionAvailable_Plugins.setCheckable(True)
        self.actionAvailable_Plugins.setChecked(True)
        self.actionAvailable_Plugins.setObjectName("actionAvailable_Plugins")
        self.actionSettings = QtWidgets.QAction(CreepyMainWindow)
        self.actionSettings.setObjectName("actionSettings")
        self.actionNewPersonProject = QtWidgets.QAction(CreepyMainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/creepy/user.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNewPersonProject.setIcon(icon6)
        self.actionNewPersonProject.setObjectName("actionNewPersonProject")
        self.actionNewLocationBasedProject = QtWidgets.QAction(CreepyMainWindow)
        self.actionNewLocationBasedProject.setObjectName("actionNewLocationBasedProject")
        self.actionAnalyzeCurrentProject = QtWidgets.QAction(CreepyMainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/creepy/target"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAnalyzeCurrentProject.setIcon(icon7)
        self.actionAnalyzeCurrentProject.setObjectName("actionAnalyzeCurrentProject")
        self.actionDrawCurrentProject = QtWidgets.QAction(CreepyMainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/creepy/map"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDrawCurrentProject.setIcon(icon8)
        self.actionDrawCurrentProject.setObjectName("actionDrawCurrentProject")
        self.actionFilterLocationsDate = QtWidgets.QAction(CreepyMainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/creepy/calendar-day.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFilterLocationsDate.setIcon(icon9)
        self.actionFilterLocationsDate.setObjectName("actionFilterLocationsDate")
        self.actionFilterLocationsPosition = QtWidgets.QAction(CreepyMainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/creepy/marker.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFilterLocationsPosition.setIcon(icon10)
        self.actionFilterLocationsPosition.setObjectName("actionFilterLocationsPosition")
        self.actionRemoveFilters = QtWidgets.QAction(CreepyMainWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/creepy/minus"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRemoveFilters.setIcon(icon11)
        self.actionRemoveFilters.setObjectName("actionRemoveFilters")
        self.actionShowHeatMap = QtWidgets.QAction(CreepyMainWindow)
        self.actionShowHeatMap.setCheckable(True)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/creepy/fire.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionShowHeatMap.setIcon(icon12)
        self.actionShowHeatMap.setObjectName("actionShowHeatMap")
        self.actionLocation_Actions = QtWidgets.QAction(CreepyMainWindow)
        self.actionLocation_Actions.setObjectName("actionLocation_Actions")
        self.actionMain_Toolbar = QtWidgets.QAction(CreepyMainWindow)
        self.actionMain_Toolbar.setObjectName("actionMain_Toolbar")
        self.actionDeleteCurrentProject = QtWidgets.QAction(CreepyMainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/creepy/minus-circle"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDeleteCurrentProject.setIcon(icon13)
        self.actionDeleteCurrentProject.setObjectName("actionDeleteCurrentProject")
        self.actionExportFilteredKML = QtWidgets.QAction(CreepyMainWindow)
        self.actionExportFilteredKML.setIcon(icon1)
        self.actionExportFilteredKML.setObjectName("actionExportFilteredKML")
        self.actionExportFilteredCSV = QtWidgets.QAction(CreepyMainWindow)
        self.actionExportFilteredCSV.setIcon(icon1)
        self.actionExportFilteredCSV.setObjectName("actionExportFilteredCSV")
        self.actionReanalyzeCurrentProject = QtWidgets.QAction(CreepyMainWindow)
        self.actionReanalyzeCurrentProject.setIcon(icon7)
        self.actionReanalyzeCurrentProject.setObjectName("actionReanalyzeCurrentProject")
        self.actionCheckUpdates = QtWidgets.QAction(CreepyMainWindow)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/creepy/globe.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCheckUpdates.setIcon(icon14)
        self.actionCheckUpdates.setObjectName("actionCheckUpdates")
        self.actionCompareProjects = QtWidgets.QAction(CreepyMainWindow)
        self.actionCompareProjects.setObjectName("actionCompareProjects")
        self.actionFilterLocationsCustom = QtWidgets.QAction(CreepyMainWindow)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/creepy/counter.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFilterLocationsCustom.setIcon(icon15)
        self.actionFilterLocationsCustom.setObjectName("actionFilterLocationsCustom")
        self.actionNewPlaceProject = QtWidgets.QAction(CreepyMainWindow)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/creepy/globe-green.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNewPlaceProject.setIcon(icon16)
        self.actionNewPlaceProject.setObjectName("actionNewPlaceProject")
        self.actionFilterInaccurateLocations = QtWidgets.QAction(CreepyMainWindow)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/creepy/marker_inaccurate.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFilterInaccurateLocations.setIcon(icon17)
        self.actionFilterInaccurateLocations.setObjectName("actionFilterInaccurateLocations")
        self.menuNewProject.addAction(self.actionNewPersonProject)
        self.menuNewProject.addAction(self.actionNewPlaceProject)
        self.menuExport.addAction(self.actionExportKML)
        self.menuExport.addAction(self.actionExportCSV)
        self.menuExport.addAction(self.actionExportFilteredKML)
        self.menuExport.addAction(self.actionExportFilteredCSV)
        self.menuCreepy.addAction(self.menuNewProject.menuAction())
        self.menuCreepy.addAction(self.menuExport.menuAction())
        self.menuCreepy.addAction(self.actionExit)
        self.menuEdit.addAction(self.actionPluginsConfiguration)
        self.menuAbout.addAction(self.actionReportProblem)
        self.menuAbout.addAction(self.actionAbout)
        self.menuAbout.addAction(self.actionCheckUpdates)
        self.menuView.addSeparator()
        self.menuFilters.addAction(self.actionFilterLocationsCustom)
        self.menuFilters.addAction(self.actionFilterLocationsDate)
        self.menuFilters.addAction(self.actionFilterLocationsPosition)
        self.menuFilters.addAction(self.actionRemoveFilters)
        self.menuFilters.addAction(self.actionFilterInaccurateLocations)
        self.menubar.addAction(self.menuCreepy.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuFilters.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())
        self.mainToolbar.addAction(self.actionNewPersonProject)
        self.mainToolbar.addAction(self.actionNewPlaceProject)
        self.mainToolbar.addAction(self.actionPluginsConfiguration)
        self.mainToolbar.addAction(self.actionAnalyzeCurrentProject)
        self.mainToolbar.addAction(self.actionDrawCurrentProject)
        self.mainToolbar.addAction(self.actionExportKML)
        self.mainToolbar.addAction(self.actionExportCSV)
        self.mainToolbar.addSeparator()
        self.locationsActionsToolbar.addAction(self.actionFilterLocationsCustom)
        self.locationsActionsToolbar.addAction(self.actionFilterLocationsDate)
        self.locationsActionsToolbar.addAction(self.actionFilterLocationsPosition)
        self.locationsActionsToolbar.addAction(self.actionFilterInaccurateLocations)
        self.locationsActionsToolbar.addAction(self.actionShowHeatMap)
        self.locationsActionsToolbar.addAction(self.actionRemoveFilters)

        self.retranslateUi(CreepyMainWindow)
        self.centralStackedWidget.setCurrentIndex(0)
        self.actionExit.activated.connect(CreepyMainWindow.close)
        QtCore.QMetaObject.connectSlotsByName(CreepyMainWindow)

    def retranslateUi(self, CreepyMainWindow):
        _translate = QtCore.QCoreApplication.translate
        CreepyMainWindow.setWindowTitle(_translate("CreepyMainWindow", "cree.py - Geolocation OSINT tool"))
        self.menuCreepy.setTitle(_translate("CreepyMainWindow", "Creepy"))
        self.menuNewProject.setTitle(_translate("CreepyMainWindow", "New Project"))
        self.menuExport.setTitle(_translate("CreepyMainWindow", "Export"))
        self.menuEdit.setTitle(_translate("CreepyMainWindow", "Edit"))
        self.menuAbout.setTitle(_translate("CreepyMainWindow", "Help"))
        self.menuView.setTitle(_translate("CreepyMainWindow", "View"))
        self.menuFilters.setTitle(_translate("CreepyMainWindow", "Filters"))
        self.dockWLocationsList.setWindowTitle(_translate("CreepyMainWindow", "Locations List"))
        self.dockWProjects.setWindowTitle(_translate("CreepyMainWindow", "Target Projects"))
        self.dockWCurrentLocationDetails.setWindowTitle(_translate("CreepyMainWindow", "Current Location Details"))
        self.currentTargetDetailsDetailsDateLabel.setText(_translate("CreepyMainWindow", "<b>Date:       </b>        "))
        self.currentTargetDetailsLocationLabel.setText(_translate("CreepyMainWindow", "<b>Location: </b>"))
        self.currentTargetDetailsSourceLabel.setText(_translate("CreepyMainWindow", "<b>From:       <b>"))
        self.currentTargetDetailsContextLabel.setText(_translate("CreepyMainWindow", "<b>Context:  <b>"))
        self.mainToolbar.setWindowTitle(_translate("CreepyMainWindow", "toolBar"))
        self.locationsActionsToolbar.setWindowTitle(_translate("CreepyMainWindow", "toolBar_2"))
        self.dockWLogging.setWindowTitle(_translate("CreepyMainWindow", "Log Output"))
        self.actionExportKML.setText(_translate("CreepyMainWindow", "Export Project Locations as KML"))
        self.actionExportKML.setToolTip(_translate("CreepyMainWindow", "Export project locations in KML format"))
        self.actionExportCSV.setText(_translate("CreepyMainWindow", "Export Project Locations as CSV"))
        self.actionExportCSV.setToolTip(_translate("CreepyMainWindow", "Export project locations in CSV format"))
        self.actionExit.setText(_translate("CreepyMainWindow", "Exit"))
        self.actionReportProblem.setText(_translate("CreepyMainWindow", "Report a problem / bug"))
        self.actionAbout.setText(_translate("CreepyMainWindow", "About"))
        self.actionPluginsConfiguration.setText(_translate("CreepyMainWindow", "Plugins Configuration"))
        self.actionLocations_List.setText(_translate("CreepyMainWindow", "Locations List"))
        self.actionResult_Details.setText(_translate("CreepyMainWindow", "Result Details"))
        self.actionAvailable_Plugins.setText(_translate("CreepyMainWindow", "Available Plugins"))
        self.actionSettings.setText(_translate("CreepyMainWindow", "Settings"))
        self.actionNewPersonProject.setText(_translate("CreepyMainWindow", "Person Based Project"))
        self.actionNewLocationBasedProject.setText(_translate("CreepyMainWindow", "Location Based Project"))
        self.actionAnalyzeCurrentProject.setText(_translate("CreepyMainWindow", "Analyze Current Project"))
        self.actionAnalyzeCurrentProject.setToolTip(_translate("CreepyMainWindow", "Analyze Current Project"))
        self.actionDrawCurrentProject.setText(_translate("CreepyMainWindow", "Draw Locations for Current Project"))
        self.actionDrawCurrentProject.setToolTip(_translate("CreepyMainWindow", "Draw Locations for the currently selected project"))
        self.actionFilterLocationsDate.setText(_translate("CreepyMainWindow", "Filter Locations by Date"))
        self.actionFilterLocationsDate.setToolTip(_translate("CreepyMainWindow", "<html><head/><body><p>You can filter the retrieved locations from a project based on a date range within which they have been created</p></body></html>"))
        self.actionFilterLocationsPosition.setText(_translate("CreepyMainWindow", "Filter Locations by Position"))
        self.actionFilterLocationsPosition.setToolTip(_translate("CreepyMainWindow", "<html><head/><body><p>You can filter the retrieved locations based on their distance from a given point in the map</p></body></html>"))
        self.actionRemoveFilters.setText(_translate("CreepyMainWindow", "Remove Filters"))
        self.actionRemoveFilters.setToolTip(_translate("CreepyMainWindow", "<html><head/><body><p>Remove all the filters on date and locations and show all the retreived locations on the map</p></body></html>"))
        self.actionShowHeatMap.setText(_translate("CreepyMainWindow", "Show HeatMap"))
        self.actionShowHeatMap.setToolTip(_translate("CreepyMainWindow", "<html><head/><body><p>Show a heatmap with the selected locations instead of pointers.</p></body></html>"))
        self.actionLocation_Actions.setText(_translate("CreepyMainWindow", "Location Actions"))
        self.actionMain_Toolbar.setText(_translate("CreepyMainWindow", "Main Toolbar"))
        self.actionDeleteCurrentProject.setText(_translate("CreepyMainWindow", "Delete Current Project"))
        self.actionDeleteCurrentProject.setToolTip(_translate("CreepyMainWindow", "Delete this project"))
        self.actionExportFilteredKML.setText(_translate("CreepyMainWindow", "Export Filtered Locations as KML"))
        self.actionExportFilteredKML.setToolTip(_translate("CreepyMainWindow", "Export  currently visible locations as a KML file"))
        self.actionExportFilteredCSV.setText(_translate("CreepyMainWindow", "Export Filtered Locations as CSV"))
        self.actionExportFilteredCSV.setToolTip(_translate("CreepyMainWindow", "Export currently visible locations as CSV"))
        self.actionReanalyzeCurrentProject.setText(_translate("CreepyMainWindow", "Reanalyze Current Project"))
        self.actionReanalyzeCurrentProject.setToolTip(_translate("CreepyMainWindow", "Reanalyze Current Project"))
        self.actionCheckUpdates.setText(_translate("CreepyMainWindow", "Check for updates"))
        self.actionCompareProjects.setText(_translate("CreepyMainWindow", "Compare Projects"))
        self.actionCompareProjects.setToolTip(_translate("CreepyMainWindow", "Compare two projects"))
        self.actionFilterLocationsCustom.setText(_translate("CreepyMainWindow", "Filter Locations ( Custom ) "))
        self.actionNewPlaceProject.setText(_translate("CreepyMainWindow", "Place Based Project"))
        self.actionFilterInaccurateLocations.setText(_translate("CreepyMainWindow", "Filter Inaccurate Locations"))

from PyQt5 import QtWebKitWidgets
import creepy_resources_rc
